"   Startup setup
    autocmd BufEnter * lcd %:p:h


command! -complete=shellcmd -nargs=+ Shell call s:RunShellCommand(<q-args>)
function! s:RunShellCommand(cmdline)
    ""echo a:cmdline
    let expanded_cmdline = a:cmdline
    for part in split(a:cmdline, ' ')
        if part[0] =~ '\v[%#<]'
            let expanded_part = fnameescape(expand(part))
            let expanded_cmdline = substitute(expanded_cmdline, part, expanded_part, '')
        endif
    endfor
    botright new
    setlocal buftype=nofile bufhidden=wipe nobuflisted noswapfile nowrap
    "call setline(1, 'You entered:    ' . a:cmdline)
    "call setline(2, 'Expanded Form:  ' .expanded_cmdline)
    call setline(2, 'OUTPUT:')
    call setline(3,substitute(getline(2),'.','=','g'))
    execute '$read !'. expanded_cmdline
    setlocal nomodifiable
    1
endfunction

function Vimdev()
    :Tagbar
    :NERDTreeToggle
    :NERDTreeFind
    let g:NERDTreeMapActiveNode="F2"
    :exec "wincmd l"
    :exec "wincmd l"
    :exec "vertical resize 20"
    :exec "wincmd h"
endfunction

function Gonuts()
    :exec "ConqueTermSplit go run ".expand('%')
    :execute "resize 10"
    :execute "wincmd j"
    "":exec "Shell go run ".expand('%')
    "":exec "resize 10"
    "":exec "wincmd k"
    "":exec "wincmd l"
endfunction



silent! map <F2> :call Vimdev()<CR>
silent! map <F3> :call Gonuts()<CR>
command! Q execute "qa"
